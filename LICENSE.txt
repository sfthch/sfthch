The MIT License (MIT)

Copyright (c) 2019 Samarjeet

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

-----------
-- mysql --
-----------

-D , --database=name        사용할 데이터베이스.
-e , --execute=name         명령문을 실행하고 종료하십시오.
-f , --force                SQL 오류가 발생하더라도 계속하십시오.
-h , --host=name            호스트에 연결하십시오.
-p , --password[=name]      서버에 연결할 때 사용할 비밀번호입니다.
-P , --port=num             기본 설정 my.cnf, $ MYSQL_TCP_PORT, / etc / services, 내장 기본값 (3306)
-N , --skip-column-names    결과에 열 이름을 쓰지 마십시오. --column-names 참조하십시오.
-t , --table                테이블 형식으로 출력을 표시합니다.
     --tee=name             모든 것을 아웃 파일에 추가하십시오.
-u , --user=name            현재 사용자가 아닌 경우 로그인 할 사용자입니다.
-v , --verbose              더 쓰세요. (-v -v -v는 테이블 출력 형식을 제공합니다).

source    , \.              SQL 스크립트 파일을 실행하십시오. 파일 이름을 인수로 사용합니다.
status    , \s              서버에서 상태 정보를 가져옵니다.
system    , \!              시스템 쉘 명령을 실행하십시오. 유닉스 계열 시스템에서만 작동합니다.
tee       , \T              출력 파일 [to_outfile]을 설정하십시오. 주어진 아웃 파일에 모든 것을 추가하십시오.

---------------
-- mysqldump --
---------------

--no-data                                       DDL 정보만 dump 합니다.
--no-create [디비명] [테이블명]                 테이블구조를 제외한 데이터만 dump 합니다. 여러개의 테이블이 가능 합니다.

--host=host name, -h host name                  접속 하려는 서버의 host 정보를 입력 합니다. default값은 localhost 입니다.
--password[=password], -p[password]             접속 하려는 서버의 user의 패스워드를 입력 합니다.
--port=port num,-P port num                     접속 하려는 서버의 port를 지정 합니다.
--user=user name, -u user name                  접속 하려는 서버의 user명을 기술 합니다.

--no-data, -d                                   데이터를 입력하지 않습니다. create 구문을 전부 제외 합니다.
--where="1=1 and a = 'a'", -w'where condition'  데이터를 dump할 때 where구문에 맞는 데이터만 dump받고 싶은 경우에 사용합니다.
--add-drop-table                                Create table 구문 전에 drop table 구문을 추가 합니다.
--create-options                                Create table 구문 안에 모든 테이블 옵션을 추가 합니다.
--no-create-info, -t                            Create table 구문을 작성하지 않습니다.
--replace                                       insert 구문 대신에 replace 구문을 사용하여 insert하게 설정합니다.

--flush-privileges                              mysql database를 dump한 후 dump파일에 FLUSH PRIVILEGES구문이 추가 됩니다.
--no-autocommit                                 각각의 dump되는 table의 앞 뒤에 SET autocommit=0 과 COMMIT 구문을 넣어 작성 합니다.

--complete-insert, -c                           INSERT 구문 작성시 컬럼 이름을 전부 포함하여 작성하도록 합니다.
--quote-names, -O                               식별자를 "'"를 사용하여 모두 감쌉니다. 만약, ANSI_QUOTES SQL MODE인 경우네는 """를 사용하여 감쌉니다. enable 이 기본 입니다.

--default-character-set=charset name            기본 character set으로 charset_name을 사용하도록 설정합니다. default는 utf8로 사용 됩니다.
--force, -f                                     에러가 발생해도 계속 작업이 진행되게 합니다.
--dump-date                                     dump 파일의 생성 일자를 comment로 추가합니다.
--insert-ignore                                 INSERT 문 대신 INSERT IGNORE 문을 작성하세요.

/usr/local/mysql/bin/mysqldump -h cfota-stg-cluster.cxnwrb9gjdfm.ap-northeast-1.rds.amazonaws.com \
                               -P 5506 -ufota_sys -p'ifotastg#123' fotadbbr01 tcdm_mgt_blck_case_wrk \
                               --where="crt_dt >= '20200609050943' and crt_dt < '20230529070246'" \
                               | sed 's/tcdm_mgt_blck_case_wrk/z8_tcdm_mgt_blck_case_wrk_230614/g' \
                               > z8_tcdm_mgt_blck_case_wrk_230614.dmp

/usr/local/mysql/bin/mysql -h cfota-stg-msk-test-cluster.cluster-cxnwrb9gjdfm.ap-northeast-1.rds.amazonaws.com \
                           -P 5506 -ufota_sys -p'ifotastg#123' fotadbbr01 --force < z8_tcdm_mgt_blck_case_wrk_230614.dmp

----------------
-- mysqladmin --
----------------

- 5초마다 한번씩 보여주기       : -i 옵션을 이용하면 몇초마다 한번씩 정기적으로 processlist 를 보여준다.
- 변경된 사항 차이점만 보여주기 : -r 옵션은 정보를 갱신항를 경우 차이점만 보여준다.

/usr/local/mysql/bin/mysqladmin -h cfota-stg-cluster.cxnwrb9gjdfm.ap-northeast-1.rds.amazonaws.com -P 5506 -ufota_sys -pifotastg#123 -i10 -r processlist

mysqladmin --defaults-extra-file=mylogin_masdr.cnf processlist status extended-status --sleep=10 --count=100 --relative
mysqladmin --defaults-extra-file=mylogin_masdr.cnf processlist --sleep=10 --count=100 --relative
mysqladmin --defaults-extra-file=mylogin_masdr.cnf processlist --sleep=10 --count=3 --relative
mysqladmin --defaults-extra-file=mylogin_masdr.cnf -i5 -c3 -r processlist
mysqladmin --defaults-extra-file=mylogin_masdr.cnf -i10 proc stat
mysqladmin --defaults-extra-file=mylogin_masdr.cnf status

mysqlshow --defaults-extra-file=mylogin_masdr.cnf maas tbmsm001 -k

---------------------
-- LOAD DATA LOCAL --
---------------------

LOAD DATA LOCAL INFILE 'z8_tmp_230322_hch_01.csv'
     INTO TABLE `fotadbbr01`.`z8_tmp_230322_hch`
     FIELDS     TERMINATED BY ','
     OPTIONALLY ENCLOSED   BY '"'
     LINES      TERMINATED BY '\n'
     IGNORE 1   LINES
     ( WRK_CRT_DT
     , schd_wrk_id
     , ROW_NUM
     )
;

---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------

-- function 생성 권한 확인
show global variables like 'log_bin_trust_function_creators';

-- 'OFF' 일 경우 아래 실행
set global log_bin_trust_function_creators = 'ON';
grant select on mysql.db   TO hch@localhost;
grant select on mysql.user TO hch@localhost;
grant select on performance_schema.events_statements_summary_by_digest TO hch@localhost;
flush privileges;

-- 함수 확인
show function status where db = 'hch';
show function status like '%fu1%';
show create function fu1;

-- 프로시저 확인
show procedure status where db = 'hch';
show procedure status like '%curdemo%';
show create procedure curdemo;

-- 이벤트 스케쥴러 ON
show variables like 'event%';
set global event_scheduler = ON ;

-- 프로세스 목록
show processlist;

-- 테이블 목록
show tables like '%c%';
show table status like '%c%';
show create table reservation;

-- KEY 목록
show keys from reservation;
show index from reservation;

-- 세팅 목록
show global  status like 'handler%';
show session status like 'sort%';
show variables      like '%';

show errors;
show warnings;
show plugins;
show engines;


-- Hint 사용하기
select * from [테이블명] use index(인덱스명) where ... order by ...

-- hint 기본 문법
use    index(인덱스명)
ignore index(인덱스명)
force  index(인덱스명)
use index for order by (인덱스명)
use index for group by (인덱스명)


-- 다른 테이블의 레코드 복사하기
INSERT INTO z_test SELECT * FROM test;

-- 테이블의 칼럼 구조만 복사해서 새로운 테이블 만들기
CREATE TABLE z_test LIKE test;

-- 테이블의 칼럼 구조와 레코드를 복사해서 테이블 생성하기
CREATE TABLE z_test SELECT * FROM test;


-- 내용에 숫자만 있는 경우
SELECT * FROM temp_table WHERE column1 REGEXP '^[0-9]+$';

-- 내용에 특수문자가 포함된 경우
SELECT * FROM temp_table WHERE column1 REGEXP '[`~!#$%^&*|\\\'\";:\/?]';

-- 한글로 시작하는 경우엔                   '^[가-힣]'
-- 모두가 한글로 구성된 경우만 검색할경우엔 '^[가-힣]+$'


1.STRAIGHT_JOIN : 여러 테이블 조인시 조인순서를 from의 순서대로 Access

2.USE INDEX / FORCE INDEX / IGNORE INDEX
- USE INDEX              : 특정 테이블의 인덱스를 사용하도록 권장
- FORCE INDEX            : USE INDEX와 동일한 기능을 하지만 옵티마이저에게 보다 강하게 테이블의 인덱스를 사용하도록 권장
- IGNORE INDEX           : 특정 인덱스를 사용하지 못하게 하는 힌트
- USE INDEX FOR JOIN     : JOIN 키워드는 테이블간 조인뿐 아니라 레코드 검색하는 용도까지 포함함.
- USE INDEX FOR ORDER BY : 명시된 인덱스를 ORDER BY 용도로만 사용하도록 제한함
- USE INDEX FOR GROUP BY : 명시된 인덱스를 GROUP BY 용도로만 사용하도록 제한

3.SQL_CACHE / SQL_NO_CACHE
MySQL은 SELECT에 의해 조회된 결과를 재사용하기 위해 쿼리 캐시에 선택적으로 저장해 둔다.
Select 쿼리의 결과를 캐시에 담아둘지 여부를 선택하는 힌트임

query_cache_type 시스템 변수의 설정 값과 힌트에 따라서 캐시여부가 결정됨
query_cache_type 0 또는 off : SQL_CACHE 힌트에 관계없이 캐시하지 않음
query_cache_type 1 또는 on  : SQL_CACHE 힌트에 관계없이 캐시함
                              SQL_NO_CACHE - 캐시하지 않음

4.SQL_CALC_FOUND_ROWS
Select 쿼리에 LIMIT 절이 사용되면 쿼리 결과 Rows수에 관계없이 limit 수 만큼만 출력된다.
하지만 SQL_CALC_FOUND_ROWS 힌트를 경우 limit 절과는 상관없이 조건에 일치하는 모든 레코드를 검색해 결과 레코드가 몇건이나 되는지 계산한다.
그렇치만 사용자 Limit 절에 제한된 건수 만큼만 레코드를 반환한다.

mysql> select SQL_CALC_FOUND_ROWS * from employees LIMIT 5;

mysql> select FOUND_ROWS() AS total_record_count;


split -d -l 5000 fileList fileList_

ps -efl | grep R | grep cfota


-- 여러가지 명령정리

show variables;                                              -- 서버의 variables(설정사항)출력
show variables like 'have_inno%'                             -- 조건에 맞는 variables만 출력
show databases;                                              -- database목록
show tables;                                                 -- 현재DB의 테이블목록(temporary table은 출력하지 않음)
show tables  from db명;                                      -- 지정된 db명이 소유한 테이블목록
show tables  like 'mem%';                                    -- 조건에 맞는 테이블목록만 출력
show index   from 테이블명;                                  -- 인덱스 보기
show columns from 테이블명;                                  -- 테이블구조(describe 테이블명, explain 테이블명)
show table status;                                           -- 현재 DB의 테이블들의 상태(row수,table type,row길이,..)
show table status from db명;                                 -- 지정된 DB의 테이블들의 상태(row수,table type,row길이,..)
show create table 테이블명;                                  -- 해당 테이블 생성 SQL문 출력
rename table 테이블1 to 테이블2;                             -- 테이블명 변경(ALTER TABLE 테이블1 RENAME TO 테이블2)
rename table 테이블1 to 테이블2, 테이블3 to 테이블4;         -- rename multiple tables
rename table db1명.테이블명 to db2명.테이블명;               -- 테이블을 다른 DB로 이동
alter table 테이블명 add 컬럼명 데이터타입;                  -- 컬럼추가
alter table 테이블명 del 컬럼명;                             -- 컬럼제거
alter table 테이블명 modify 컬럼명 컬럼타입;                 -- 컬럼명에 지정된 컬럼타입의 변경
alter table 테이블명 change old컬럼명 new컬럼명 컬럼타입     -- 컬럼명 변경
alter table 테이블명 type=innodb;                            -- 테이블type변경
create table 테이블명(..) type=heap min_rows=10000;          -- 10000row를 수용할 수 있을 만큼 메모리할당(heap type이므로)
select version();                                            -- MySQL서버버전 출력
create table 테이블2 as select * from 테이블1;               -- 테이블1과 동일한 테이블 생성(with 데이터, as는 생략가능)
create table 테이블2 as select * from 테이블1 where 1 = 2;   -- 테이블1과 동일한 구조의 테이블 생성(without 데이터, 1 = 2는 0으로 할수도 있다.)
insert into 테이블2 select * from 테이블1;                   -- 테이블1의 데이터를 테이블2에 insert


#select current_date;
#한달전   where reg_date >= date_add(now(), interval -1 month)
#하루전   where reg_date >= date_add(now(), interval -1 day)
#한시간전 where reg_date >= date_add(now(), interval -1 hour)
#기타 날짜 조건 select date_format(d_time,"%Y-%m-%d") from 테이블명
#select date_format(d_time,"%H:%i::%s") from 테이블명
#d_time 오늘인거 가져오기
#select d_time from 테이블명 where date_format(d_time,"%Y-%m-%d") = current_date;
#등록된지 24시간이 안된거 가져오기
#select d_time from 테이블명 where d_time > date_sub(now(), interval 1 day);
#select date_add(now(), interval -1 hour), date_add(now(), interval -30 minute),now();



---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------

                           MOVING

  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).
  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).
  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).
  b  ^B  ESC-v      *  Backward one window (or N lines).
  z                 *  Forward  one window (and set window to N).
  w                 *  Backward one window (and set window to N).
  ESC-SPACE         *  Forward  one window, but don't stop at end-of-file.
  d  ^D             *  Forward  one half-window (and set half-window to N).
  u  ^U             *  Backward one half-window (and set half-window to N).
  ESC-)  RightArrow *  Left  one half screen width (or N positions).
  ESC-(  LeftArrow  *  Right one half screen width (or N positions).
  F                    Forward forever; like "tail -f".
  r  ^R  ^L            Repaint screen.
  R                    Repaint screen, discarding buffered input.
        ---------------------------------------------------
        Default "window" is the screen height.
        Default "half-window" is half of the screen height.
 ---------------------------------------------------------------------------

                          SEARCHING

  /pattern          *  Search forward for (N-th) matching line.
  ?pattern          *  Search backward for (N-th) matching line.
  n                 *  Repeat previous search (for N-th occurrence).
  N                 *  Repeat previous search in reverse direction.
  ESC-n             *  Repeat previous search, spanning files.
  ESC-N             *  Repeat previous search, reverse dir. & spanning files.
  ESC-u                Undo (toggle) search highlighting.
  &pattern          *  Display only matching lines
        ---------------------------------------------------
        A search pattern may be preceded by one or more of:
        ^N or !  Search for NON-matching lines.
        ^E or *  Search multiple files (pass thru END OF FILE).
        ^F or @  Start search at FIRST file (for /) or last file (for ?).
        ^K       Highlight matches, but don't move (KEEP position).
        ^R       Don't use REGULAR EXPRESSIONS.
 ---------------------------------------------------------------------------

                           JUMPING

  g  <  ESC-<       *  Go to first line in file (or line N).
  G  >  ESC->       *  Go to last  line in file (or line N).
